# -*- coding: utf-8 -*-
"""Img_Segmentation(Edge_Detection)_Image_Processing (1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KJICzXuVJjgzBH3b_ZZOO9-JbXWmEo68
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

#Lets load a simple image with 3 black squares
#Image = cv2.imread('images\shapes.jpg')
image = cv2.imread('/content/drive/MyDrive/contour.jpg')
cv2_imshow(image)

#Grayscale
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

#find the canny edge
edged = cv2.Canny(gray, 30, 200)
cv2_imshow(edged)


contours, hierarchy = cv2.findContours(edged, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
cv2_imshow(edged)
print("Number of Contours  found= " +str(len(contours)))

cv2.drawContours(image, contours, -1, (0,0,255), 3)
cv2_imshow(image)

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

image =cv2.imread('/content/drive/MyDrive/black&white.jpg')
cv2_imshow

blank_image = np.zeros((image.shape[0], image.shape[1], 3))

original_image = image

gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

edged = cv2.Canny(gray, 50, 200)
cv2_imshow(edged)

contours, hierarchy = cv2.findContours(edged.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
cv2_imshow(edged)
print("Number of Contours  found= " +str(len(contours)))

cv2.drawContours(blank_image, contours, -1, (0,255,0),3)
cv2_imshow(blank_image)

import numpy as np
import cv2
from google.colab.patches import cv2_imshow

def get_contour_areas(contours):

  all_areas = []
  for cnt in contours:
    area = cv2.contourArea(cnt)
    all_areas.append(area)
  return all_areas

#Load the image
image = cv2.imread('/content/drive/MyDrive/contour2.jpg')
original_image = image

print ("Contour Areas before sorting")
print (get_contour_areas(contours))

#Sort contours large to small
sorted_contours = sorted(contours, key=cv2.contourArea, reverse=True)

print("Contour Areas after sorting")
print (get_contour_areas(sorted_contours))

#Iterate over our contours and draw one at a time
for c in sorted_contours:
  cv2.drawContours(original_image,[c], -1, (255,0,0), 3)
  cv2_imshow(original_image)

import numpy as np
import cv2
from google.colab.patches import cv2_imshow

image = cv2.imread('/content/drive/MyDrive/contour2.jpg')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
cv2_imshow(image)
#Threshold the image
ret, thresh = cv2.threshold(gray, 176, 255, 0)

contours, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_NONE)

n = len(contours) - 1
contours = sorted(contours, key =cv2.contourArea, reverse=False)[:n]

for c in contours:
  hull = cv2.convexHull(c)a
  cv2.drawContours(image, [hull], 0, (0,255,0),2)
  cv2_imshow(image)